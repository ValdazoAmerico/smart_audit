from dotenv import load_dotenv
from google.adk.agents import LlmAgent
from typing import Dict, Any
from google.genai import types
from .utils.prompt import guia
from google import genai
import os

# Load variables from .env into environment
load_dotenv()

instruction_tool  = f"""Eres un especialista en dolor lumbar que usa la siguiente guia de Dolor Lumbar para responder y citar la fuente de la recomendaci√≥n:

{guia}
"""



# instruction ="""- Sos un **auditor de pertinencia cl√≠nica**. Tu tarea es verificar si una orden m√©dica, ya validada administrativamente, **es cl√≠nicamente coherente y justificada seg√∫n evidencia cl√≠nica y gu√≠as oficiales**.

# - ‚ö†Ô∏è **IMPORTANTE**: Esta orden **ya fue revisada por un auditor administrativo**. Por lo tanto:
#   - Toda la documentaci√≥n obligatoria est√° presente.
#   - Tu √∫nica responsabilidad es **auditar la justificaci√≥n cl√≠nica** de la pr√°ctica solicitada.

# ---

# üö® **PASO OBLIGATORIO INICIAL**: 
# **ANTES de evaluar cualquier criterio, SIEMPRE debes usar la herramienta `consultar_guia_medica`**

# 1. **Identifica** la pr√°ctica m√©dica solicitada y el diagn√≥stico
# 2. **Ejecuta INMEDIATAMENTE** `consultar_guia_medica("pr√°ctica + diagn√≥stico")`
#    - Ejemplo: `consultar_guia_medica("resonancia de columna lumbar en lumbalgia")`
#    - Ejemplo: `consultar_guia_medica("kinesiolog√≠a en artrosis de rodilla")`
# 3. **Solo despu√©s** de obtener la respuesta de la gu√≠a, procede con la evaluaci√≥n

# ‚ö†Ô∏è **NO EVAL√öES NING√öN CRITERIO SIN ANTES CONSULTAR LA GU√çA M√âDICA**

# ---

# üîç **Criterios cl√≠nicos a revisar (despu√©s de consultar la gu√≠a)**:

# "Se recomienda que ante un paciente con Dolor lumbar sin respuesta al tratamiento despu√©s de 4-6 semanas de evoluci√≥n considerar la utilidad de estudios de imagen"

# ‚ó¶ **La indicaci√≥n debe cumplir con los criterios de la gu√≠a cl√≠nica consultada**.

# ---

# üìã **Formato de tu respuesta (obligatorio)**:

# **PRIMERO**: Muestra que consultaste la gu√≠a:
# üîç **Consulta a gu√≠a cl√≠nica realizada**: `consultar_guia_medica("pr√°ctica + diagn√≥stico")`

# **DESPU√âS**: Respond√© siempre en bullets, uno por cada criterio, indicando si est√° ‚úÖ o ‚ùå, y explicando brevemente.

# **Ejemplo de respuesta:**

# üîç **Consulta a gu√≠a cl√≠nica realizada**: `consultar_guia_medica("kinesiolog√≠a en lumbalgia")`

# üìö **INFORMACI√ìN DE LA GU√çA CL√çNICA**:
# *Seg√∫n la Gu√≠a de Pr√°ctica Cl√≠nica sobre Dolor Lumbar: La kinesiolog√≠a est√° recomendada como tratamiento de primera l√≠nea en lumbalgia aguda y subaguda. Se indica un programa de 8-12 sesiones, 2-3 veces por semana. Nivel de evidencia A.*

# üìã **EVALUACI√ìN CL√çNICA**:
# - ‚úÖ **Cumple criterios de gu√≠a cl√≠nica**: *Cumple con recomendaciones*

# üîö **Resultado final**:
# ‚úÖ **Pertinencia cl√≠nica validada.** Orden autorizada para su aprobaci√≥n m√©dica.

# ---

# Si hay problemas, estructur√° igual la respuesta con bullets, y us√° este formato final:

# üîç **Consulta a gu√≠a cl√≠nica realizada**: `consultar_guia_medica("resonancia lumbar en lumbalgia")`

# üìö **INFORMACI√ìN DE LA GU√çA CL√çNICA**:
# *Seg√∫n la Gu√≠a de Dolor Lumbar: La resonancia magn√©tica no se recomienda rutinariamente en lumbalgia inespec√≠fica. Solo se justifica en dolor cr√≥nico (>6 semanas) tras fracaso de tratamientos conservadores documentados.*

# üìã **EVALUACI√ìN CL√çNICA**:
# - ‚úÖ **Diagn√≥stico espec√≠fico**: *Lumbalgia*
# - ‚ùå **Pr√°ctica coherente con el diagn√≥stico**: *No cumple criterios de gu√≠a*
# - ‚ùå **Indicaciones claras**: *Falta especificar cronicidad y tratamientos previos*
# - ‚úÖ **Profesional derivante con matr√≠cula vigente y especialidad compatible**
# - ‚ùå **Cumple criterios de gu√≠a cl√≠nica**: *No cumple requisitos*

# üîö **Resultado final**:
# ‚ùå **Pertinencia cl√≠nica rechazada.** Orden no autorizada por falta de justificaci√≥n cl√≠nica.
# La resonancia no cumple criterios de la gu√≠a cl√≠nica consultada.

# ---

# üìå **RECORDATORIOS CR√çTICOS**:
# 1. **NUNCA eval√∫es sin antes usar `consultar_guia_medica`**
# 2. **SIEMPRE muestra en tu respuesta que consultaste la gu√≠a**
# 3. **SIEMPRE cita los criterios espec√≠ficos de la gu√≠a en tu evaluaci√≥n**
# 4. No repitas controles administrativos
# 5. No especules ni digas "parece estar bien"
# 6. Basate **exclusivamente en la gu√≠a cl√≠nica consultada**
# 7. Us√° lenguaje claro, cl√≠nico y profesional

# ‚ö†Ô∏è **FLUJO OBLIGATORIO**: Consultar gu√≠a ‚Üí Evaluar criterios ‚Üí Responder con formato
# """

instruction = """Sos un auditor cl√≠nico experto. Que debes validar la pertinencia cl√≠nica de una orden m√©dica. Identifica el estudio solicitado, el diagn√≥stico y la justificaci√≥n cl√≠nica. Posteriormente analiza si el estudio solicitado est√° cl√≠nicamente justificado validendo del uso de la tool `consultar_guia_medica`

**IMPORTANTE**: Inpendientemente recuerda que la guia dice: `*"Se recomienda que ante un paciente con Dolor lumbar sin respuesta al tratamiento despu√©s de 4-6 semanas de evoluci√≥n considerar la utilidad de estudios de imagen`. El tratamiento con paracetamol es insuficiente para justificar estudios de imagen.


Formato de respuesta en bullets:

**Evaluaci√≥n de pertinencia cl√≠nica**: [observaciones]

**Resultado**: [‚úÖ Aprobado | ‚ùå Rechazado]

**Notas para el m√©dico solicitante (Solo en el caso de rechazo)**: - [informaci√≥n]

Fuente: (Ministerio de Salud P√∫blica. Dolor lumbar: Gu√≠a Pr√°ctica Cl√≠nica (GPC). Primera Edici√≥n. Quito: Direcci√≥n Nacional de Normatizaci√≥n; 2015)

IMPORTANTE_ Siempre debes citar la fuente."""
def consultar_guia_medica(consulta: str) -> str:
    client = genai.Client(api_key=os.getenv("GOOGLE_API_KEY"))
    
    try:
        response = client.models.generate_content(
            model="gemini-2.0-flash",
            contents=f"""Responde la siguiente consulta en base a la guia de Dolor Lumbar y cita la fuente de la recomendaci√≥n:

{consulta}
"""
        )
        print("RESPONSE", response)
        return response.candidates[0].content.parts[0].text
    except Exception as e:
        print(e)
        #return """La Gu√≠a de Pr√°ctica Cl√≠nica sobre Dolor Lumbar establece que no se recomienda la solicitud de estudios de imagen ‚Äîincluyendo resonancia magn√©tica (RM)‚Äî de forma rutinaria en pacientes con lumbalgia aguda inespec√≠fica, especialmente en ausencia de signos de alarma (Recomendaci√≥n A).

# Sin embargo, se justifica la solicitud de una resonancia magn√©tica en pacientes con dolor lumbar cr√≥nico (m√°s de 6 semanas de evoluci√≥n) cuando han fracasado tratamientos conservadores adecuados, como medicaci√≥n analg√©sica y fisioterapia (Recomendaci√≥n B).

# En particular, la indicaci√≥n de estudios de imagen puede considerarse pertinente si el paciente presenta s√≠ntomas persistentes tras un abordaje no invasivo documentado, como sesiones de kinesiolog√≠a por al menos 4 a 6 semanas, y persiste con mal control del dolor a pesar del uso de analg√©sicos escalonados (paracetamol, code√≠na u otros).

# La gu√≠a tambi√©n se√±ala que ante pacientes con dolor lumbar sin mejor√≠a tras un tratamiento conservador completo, debe realizarse una reevaluaci√≥n cl√≠nica que incluya factores de evoluci√≥n temporal, respuesta a tratamientos previos y evaluaci√≥n del uso racional de estudios complementarios (√º/R).

# Por el contrario, la indicaci√≥n de resonancia magn√©tica en casos de dolor lumbar cr√≥nico sin detalles sobre evoluci√≥n cl√≠nica ni tratamientos realizados previamente no cumple con los criterios de pertinencia establecidos por la gu√≠a (Recomendaci√≥n D).

# """
    # except Exception as e:
    #     return f"‚ö†Ô∏è Error en la consulta a Gemini: {e}"

#guardar_evaluacion_tool = FunctionTool(func=guardar_evaluacion)


# Now you can access them
# api_key = os.getenv("GOOGLE_API_KEY")
# vertexai = os.getenv("GOOGLE_GENAI_USE_VERTEXAI")

# os.environ['GOOGLE_API_KEY'] = api_key
# os.environ['GOOGLE_GENAI_USE_VERTEXAI'] = vertexai

MODEL_NAME = "gemini-2.5-flash"

root_agent = LlmAgent(
    model=MODEL_NAME,
    generate_content_config=types.GenerateContentConfig(
        temperature=0.0,
    ),
    name="Agente_especialista",
    instruction=instruction,
    description="Agente especialista en dolor lumbar",
    tools=[consultar_guia_medica]
)
# import vertexai

# PROJECT_ID = "uma-datascience-dev"
# LOCATION = "us-central1"
# STAGING_BUCKET = "gs://uma-datascience-dev-ia"

# vertexai.init(
#     project=PROJECT_ID,
#     location=LOCATION,
#     staging_bucket=STAGING_BUCKET,
# )

# from vertexai.preview import reasoning_engines

# app = reasoning_engines.AdkApp(
#     agent=root_agent,
#     enable_tracing=False,
# )

# from vertexai import agent_engines

# remote_app = agent_engines.create(
#     agent_engine=root_agent,
#     requirements=[
#         "google-cloud-aiplatform[adk,agent_engines]"   
#     ]
# )
# print("RESOURCE")
# print(remote_app.resource_name)
# )
# from vertexai import agent_engines


# adk_app = agent_engines.get('4348058314458791936')

# #agent_engine = agent_engines.get('projects/145741847476/locations/us-central1/reasoningEngines/2789812843388600320')

# # RESOURCE_ID=''
# # from vertexai import agent_engines

# # adk_app = agent_engines.get(RESOURCE_ID)

# remote_session = adk_app.create_session(user_id="USER_ID3")
# print(remote_session)


# for event in adk_app.stream_query(
#     user_id="USER_ID3",
#     session_id=remote_session["id"],#  # Optional
#     message="hola",
# ):
#   print(event)




#print(remote_app.resource_name)
# # Agent Interaction
# APP_NAME = "predoc_app"
# USER_ID = "user_1"
# SESSION_ID = "session_001"

# # Session and Runner
# session_service = InMemorySessionService()
# session = session_service.create_session(app_name=APP_NAME, user_id=USER_ID, session_id=SESSION_ID)
# runner = Runner(agent=root_agent, app_name=APP_NAME, session_service=session_service)


# def call_agent(query):
#   content = types.Content(role='user', parts=[types.Part(text=query)])
#   events = runner.run(user_id=USER_ID, session_id=SESSION_ID, new_message=content)

#   for event in events:
#       if event.is_final_response():
#           final_response = event.content.parts[0].text
#           print("Agent Response: ", final_response)

# call_agent("hola")